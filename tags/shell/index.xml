<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Shell on RSN UX_Lab Blog</title>
        <link>https://blog.realsn.com/tags/shell/</link>
        <description>Recent content in Shell on RSN UX_Lab Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko</language>
        <lastBuildDate>Mon, 14 Nov 2022 08:21:00 +0000</lastBuildDate><atom:link href="https://blog.realsn.com/tags/shell/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Shell Script</title>
        <link>https://blog.realsn.com/p/shell-script/</link>
        <pubDate>Mon, 14 Nov 2022 08:21:00 +0000</pubDate>
        
        <guid>https://blog.realsn.com/p/shell-script/</guid>
        <description>&lt;img src="https://blog.realsn.com/p/shell-script/thumb.png" alt="Featured image of post Shell Script" /&gt;&lt;h2 id=&#34;shell-이란&#34;&gt;Shell 이란?&lt;/h2&gt;
&lt;p&gt;Shell은 운영체제에서 사용자가 입력하는 명령을 읽고 해석하여 대신 실행해주는 프로그램이다.&lt;br&gt;
Unix 계열 운영체제의 종류로는 bash, zbash, csh 등이 있고, Windows 운영체제에서는 CMD, Power Shell 등이 있다.&lt;br&gt;
&lt;code&gt;본 게시글에서는 CLI Shell만 설명합니다.&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;shell-script-란&#34;&gt;Shell Script 란?&lt;/h2&gt;
&lt;p&gt;Shell Script는 텍스트 형식으로 저장되는 프로그램이고 한 줄씩 순차적으로 읽어 명령어룰 수행하는 프로그램이라고 할 수 있다.&lt;br&gt;
자주 사용하는 명령어 조합을 텍스트 형식으로 저장해두면 매 번 번거롭게 입력할 필요 없이 실행을 하는 것만으로 명령어들을 자동화하여 사용할 수 있는 장점이 있다.&lt;/p&gt;
&lt;h2 id=&#34;shell-중-bash를-이용하여-예제-작성&#34;&gt;Shell 중 bash를 이용하여 예제 작성&lt;/h2&gt;
&lt;p&gt;우선 Shell의 많은 종류 중에서 bash를 채택하게 된 이유는 간단하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unix계열에서 가장 널리 사용되고 있다.&lt;/li&gt;
&lt;li&gt;그 중 가장 많이 사용되는 OS인 CentOS, MacOS에서 사용하는 Command와 통용되기 때문이다.&lt;/li&gt;
&lt;li&gt;Windows 환경에서도 Git을 설치할 때 같이 설치되는 Git Bash를 이용하면 되기 때문에 제약이 적다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bash를-통해-git-commit을-반자동화-해보자&#34;&gt;bash를 통해 Git Commit을 반자동화 해보자&lt;/h3&gt;
&lt;p&gt;우리는 Hugo Framework를 사용하면서 하나의 프로젝트 당 2개의 Git Repository로 관리한다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;프로젝트의 모든 파일을 저장하는 Repository (개발 Repo)&lt;/li&gt;
&lt;li&gt;프로젝트로 만들어진 산출물을 저장하는 Repository (배포 Repo)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;위와 같이 2개의 Repo를 관리하다 보니 프로젝트의 수정 사항이 생길 때 마다 2개의 Repo에 각각 commit &amp;amp; push를 진행하여야 했다. 이를 조금 더 생산적으로 처리할 수 없을까? 라는 고민을 하다가 Shell Script를 떠올리게 되었다.&lt;br&gt;
Git에 commit하는 방법은 여러 가지가 있지만 대부분 편집기에 연동하여 사용하거나 CLI Command를 이용하여 commit을 진행하는 경우가 많다보니 Shell Script를 이용하여 commit 과정을 Command로 작성해두면 한 번의 파일 실행만으로 2개의 Repo에 commit할 수 있었다.&lt;/p&gt;
&lt;h3 id=&#34;사용-예&#34;&gt;사용 예&lt;/h3&gt;
&lt;p&gt;우선 우리가 사용하는 Hugo Framework의 배포 방식은 &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/p/hugo-framework%EB%A1%9C-publishing-%ED%95%98%EA%B8%B0/#%EC%B5%9C%EC%B4%88-project-set-up%EC%8B%9C-%EA%B0%9C%EB%B0%9C%EB%A6%AC%EC%86%8C%EC%8A%A4%EC%99%80-%EB%B0%B0%ED%8F%AC%EB%A6%AC%EC%86%8C%EC%8A%A4-%EB%B6%84%EB%A6%AC&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;링크&lt;/a&gt;에 접속하여 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;deploy.sh 샘플&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;커밋메시지를 입력하세요.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; msg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;커밋메시지 : &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo -F
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push origin master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Line 1 : bash shell임을 명시&lt;br&gt;
&lt;code&gt;Line 3~5&lt;/code&gt; : 커밋메시지를 입력받고 출력해줌&lt;br&gt;
Line 7 : 입력받은 커밋메시지로 변수 선언
Line 9 : Hugo Framework 빌드 명령어&lt;br&gt;
&lt;code&gt;Line 11~14&lt;/code&gt; : public 폴더로 접근해 git push&lt;br&gt;
&lt;code&gt;Line 16~19&lt;/code&gt; : Project 폴더로 접근해 git push&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;주의점&#34;&gt;주의점&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;deploy.sh&lt;/code&gt;파일은 Project 폴더에 존재해야한다.&lt;/li&gt;
&lt;li&gt;개발 Repo와 배포 Repo가 각각 git remote와 git submodule이 등록돼있어야 한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;bash-참고&#34;&gt;bash 참고&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.gaerae.com/2015/01/bash-hello-world.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;blog.gaerae.com - Bash 입문자를 위한 핵심 요약 정리&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
